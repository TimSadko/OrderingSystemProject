@model OrderingSystemProject.Models.Kitchen.KitchenViewModel

@{
	ViewData["Title"] = "Kitchen";
}

<h1>Orders List</h1>

@{
	Exception? ex = (Exception?)ViewData["Exception"];

	if(ex != null) // If an exception was passed display it
	{
		<div class="alert-danger">
			<a>An unexpected exception has occurred, please try again later</a>
			<a>@ex.Message</a> <!-- Show error message, for debug only-->
		</div>
	}
}

<div>
	<a class="btn btn-primary" asp-action="Index" asp-controller="Kitchen">Refresh</a>
</div>
<div>Last Update: @Model.LastUpdate.ToString("hh:mm:ss")</div>

<div class="KitchenOrdersList">
	@{
		if (Model != null)
		{
			foreach (var order in Model.Orders)
			{
				<div class="KitchenDivMain">
					@{
						string order_color = "";

						switch (order.OrderStatus)
						{
							case OrderStatus.New:
								order_color = "class=KitchenTopGreen"; break;
							case OrderStatus.Preparing:
								order_color = (order.OrderTime - DateTime.Now).Minutes > 10 ? "class=KitchenTopRed" : "class=KitchenTopYellow"; break;
						}
					}

					<div @order_color>
						<div class="KitchenOrderTop">
							<span class="KitchenOrderTableNumber">tbl @order.Table.TableNumber</span>
							<span class="KitchenOrderOrderTime">@order.OrderTime.ToString("hh:mm:ss")</span>
						</div>
						<div class="KitchenOrderTimePassed">+@((DateTime.Now - order.OrderTime).ToString(@"hh\:mm\:ss"))</div>
					</div>

					@{
						foreach (var item in order.Items)
						{
							<div class="KitchenDiv">
								<div class="KitchenItemText">@item.MenuItem.Name x@(item.Amount)</div>
								@if (item.Comment == "")
								{
									<div class="KitchenItemCommentText">- reg</div>
								}
								else
								{
									<div class="KitchenItemCommentText">- @item.Comment</div>
								}
							</div>
						}
					}
				</div>
			}
		}
	}
</div>