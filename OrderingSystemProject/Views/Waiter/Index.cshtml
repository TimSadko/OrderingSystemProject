@using OrderingSystemProject.ViewModels
@model OrderingSystemProject.ViewModels.MenuManagementViewModel

@{
    ViewData["Title"] = "Waiter";
}

@{
    var euroCulture = (System.Globalization.CultureInfo)System.Globalization.CultureInfo.InvariantCulture.Clone();
    euroCulture.NumberFormat.CurrencySymbol = "€";
    euroCulture.NumberFormat.CurrencyDecimalSeparator = ".";
    euroCulture.NumberFormat.CurrencyGroupSeparator = ",";
}

<div class="text-center">
    <p>Number of menu items: @Model.MenuItems.Count</p>
    @{
        if (TempData["MenuItemOperationConfirmMessage"] != null)
        {
            <div class="alert alert-success" role="alert">@TempData["MenuItemOperationConfirmMessage"]</div>
        }
    }
    <form method="get" action="@Url.Action("Filter")">
        <div class="form-group row">
            <div class="form-group col-md-5 form-control-lg">
                <label for="cardFilterType">Card:</label>
                <select class="form-control"
                        id="cardFilterType"
                        name="cardFilterType"
                        asp-for="@Model.CardFilter"
                        asp-items="@Html.GetEnumSelectList<MenuManagementViewModel.CardFilterType>()">
                </select>
            </div>
            <div class="form-group col-md-5 form-control-lg">
                <label for="categoryFilterType">Category:</label>
                <select class="form-control"
                        id="categoryFilterType"
                        name="categoryFilterType"
                        asp-for="@Model.CategoryFilter"
                        asp-items="@Html.GetEnumSelectList<MenuManagementViewModel.CategoryFilterType>()">
                </select>
            </div>
            <div class="form-group col-md-2 form-control-lg mt-auto">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>
    <partial name="_ErrorMessage" />

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                @* <th>Card</th>
                <th>Category</th> *@
                <th>Stock</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var menuItem in Model.MenuItems)
                {
                    <tr>
                        <td>@menuItem.Name</td>
                        <td>
                            @{
                                if (menuItem.Stock <= 0)
                                {
                                    <span class="text-danger font-weight-bold">Out of Stock</span>
                                }
                                else if (menuItem.Stock <= 10)
                                {
                                    <span class="text-warning font-weight-bold">Low: @menuItem.Stock</span>
                                }
                                else
                                {
                                    @menuItem.Stock
                                }
                            }
                        </td>
                        <td>@menuItem.Price.ToString("C",euroCulture)</td>
                        <td>
                            <a href="/Waiter/AddItem/@menuItem.MenuItemId">Add to Order</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>